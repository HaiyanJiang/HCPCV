% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/copss.R
\name{hBIC_dp_bundle}
\alias{hBIC_dp_bundle}
\title{High-dimensional BIC (hBIC) method with DP algorithm}
\usage{
hBIC_dp_bundle(X, W, Kmax, c0, alph_list)
}
\arguments{
\item{X}{N*p matrix}

\item{W}{if normalized is TRUE, then W is inverse of estimated_sigma_square(X); 
if is FALSE, then W = rep(1, ncol(X)).}

\item{Kmax}{an upper bound on the true number of change-points}

\item{c0}{the constant in calculating the \eqn{\xi_{n, p}}.
The best is c0 = 2.5, whatever \eqn{\alpha} is, the penalty will not be 
too small. c0 = 2.5 is ambitious, the hBIC works well and \eqn{\alpha} can 
be any value. c0 = 2.0 is moderate, the hBIC works for larger \eqn{\alpha},
and not so well for smaller \eqn{\alpha}. 
c0 = 1.5 is conservative, the hBIC may work for larger \eqn{\alpha}.}

\item{alph_list}{a list of \eqn{\alpha} values, the \eqn{\alpha} is used
in calculate_penalty. e.g. we can take c(0, 0.1, 0.3, 0.5)}
}
\value{
An error matrix, with c("hBIC_0", "hBIC_0.1",..., "objfit", "K_hat") 
  and c("tau_1",  ..., "tau_Kmax") as columns.
}
\description{
The hBIC method with DP algorithm to find the optimal number of change-points
}
\details{
The hBIC criterion is calculated with different values of \eqn{\alpha}'s 
  in finding the optimal number of change-points. 
  
The classic BIC criterion is defined as follows:
\deqn{BIC(L) = loss_function + L {\log(n)}^{1 + \alpha}}
  where loss_function = cv_objfun(X, X, W, cp_hat), L is the estimated muber 
  of change-points.
  
The hBIC criterion is defined as follows:
\deqn{hBIC(L) = loss_function + L (\xi_{n, p} + p)}
  Then the penalty in hBIC can be formulated as:
\deqn{penalty = p + \xi_{n, p} 
  = p + c_0 \times \sqrt{trace_R2} \times \log(n)^{1 + \alpha} }
}
